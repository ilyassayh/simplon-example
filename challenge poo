# Challenge : Gestion d’un compte bancaire en POO
class CompteBancaire:
    def __init__(self, nom_proprietaire, solde=0.0):
        self.nom_proprietaire = nom_proprietaire
        self.solde = solde

    def deposer(self, montant):
        self.solde += montant

    def retirer(self, montant):
        if montant <= self.solde:
            self.solde -= montant
        else:
            print("Solde insuffisant.")

    def afficher_solde(self):
        print(f"{self.nom_proprietaire} - Solde actuel : {self.solde} DH")


# Challenge : Système de gestion d’école
from abc import ABC, abstractmethod

class Personne(ABC):
    def __init__(self, nom, prenom, age):
        self.nom = nom
        self.prenom = prenom
        self.age = age

    @abstractmethod
    def afficher_infos(self):
        pass


class Etudiant(Personne):
    def __init__(self, nom, prenom, age, matricule):
        super().__init__(nom, prenom, age)
        self.matricule = matricule
        self.notes = []

    def ajouter_note(self, note):
        self.notes.append(note)

    def moyenne(self):
        if self.notes:
            return sum(self.notes) / len(self.notes)
        return 0.0

    def afficher_infos(self):
        print(f"Étudiant: {self.nom} {self.prenom}, Âge: {self.age}, Matricule: {self.matricule}, Moyenne: {self.moyenne():.2f}")


class Enseignant(Personne):
    def __init__(self, nom, prenom, age, specialite, salaire):
        super().__init__(nom, prenom, age)
        self.specialite = specialite
        self._salaire = salaire

    @property
    def salaire(self):
        return self._salaire

    @salaire.setter
    def salaire(self, valeur):
        if valeur >= 0:
            self._salaire = valeur
        else:
            print("Salaire invalide.")

    def afficher_infos(self):
        print(f"Enseignant: {self.nom} {self.prenom}, Âge: {self.age}, Spécialité: {self.specialite}, Salaire: {self.salaire} DH")


class Ecole:
    def __init__(self, nom):
        self.nom = nom
        self.liste_etudiants = []
        self.liste_enseignants = []

    def ajouter_etudiant(self, etudiant):
        self.liste_etudiants.append(etudiant)

    def ajouter_enseignant(self, enseignant):
        self.liste_enseignants.append(enseignant)

    def afficher_tous_les_membres(self):
        print(f"--- Membres de l'école {self.nom} ---")
        for e in self.liste_etudiants + self.liste_enseignants:
            e.afficher_infos()
